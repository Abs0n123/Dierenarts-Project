<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        16LPJcIAAAAASUVORK5CYII=
</value>
  </data>
</root>